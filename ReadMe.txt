Digital Watch Factory Dashboard
A real-time dashboard for monitoring and analyzing digital watch factory simulation data, built with Flask and D3.js.
Overview
This dashboard provides a comprehensive visualization of the digital watch factory simulation data, including:

Production metrics and KPIs
Station performance analysis
Supply chain risk assessment
Correlation analysis between key metrics

The dashboard features interactive charts, filtering options, and a button to run the simulation directly from the web interface.
Prerequisites

Python 3.6+
Flask
numpy
pandas
simpy

Your existing simulation code (main.py, simulation.py, etc.)

Installation

Clone this repository or download the files
Install the required dependencies:

bashpip install flask
Project Structure
factory-dashboard/
├── templates/             # HTML templates
│   └── index.html         # Dashboard layout
├── static/                # Static files
│   └── main.js            # D3.js visualization code
├── dashboard_data/        # Generated by simulation
│   ├── production_data.csv
│   ├── station_data.csv
│   └── material_data.csv
├── main.py                # Your existing simulation code
├── simulation.py
├── metrics.py
├── data_preparation.py
└── server.py              # Flask server
Usage

Make sure your simulation code (main.py) is in the same directory
Start the Flask server:

bashpython server.py

Open your browser and navigate to:

http://localhost:8000

Use the dashboard:

View production metrics and performance data
Filter data by time period or station
Click "Run Simulation" to execute the simulation and update data
Click "Refresh Data" to reload data without running the simulation



Features
Real-time Simulation Execution
Click the "Run Simulation" button to execute the Python simulation directly from the dashboard. The data will automatically refresh when the simulation completes.
Interactive Visualizations

Production Trend: Bar chart with fault rate overlay
Station Performance: Heatmap of occupancy rates and downtime
Supply Chain Risk: Risk assessment of materials
Correlation Analysis: Scatter plot with regression line

Data Insights
The dashboard automatically analyzes the data and provides:

Key production insights
Bottleneck identification
Maintenance recommendations
Supply chain optimization suggestions

Customization
You can customize the dashboard by:

Modifying the HTML layout in templates/index.html
Updating visualization code in static/main.js
Adjusting the Flask server in server.py

Troubleshooting
No Data Appears

Check that your simulation has run successfully
Verify that CSV files exist in the dashboard_data directory
Check the browser console for errors (press F12)

Simulation Button Not Working

Make sure the path to your main.py file is correct in server.py
Check Flask server logs for error messages
Verify you have the necessary permissions to execute the simulation